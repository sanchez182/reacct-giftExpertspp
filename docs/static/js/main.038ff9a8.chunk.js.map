{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","key","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGift","GifExpertApp","React","categorias","item","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAACC,GAAW,IAChCC,EAAiBD,EAAjBC,cAD+B,EAEEC,mBAAS,IAFX,mBAE3BC,EAF2B,KAEfC,EAFe,KAgBlC,OACI,0BAAMC,SATU,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OAOjB,2BACMO,KAAK,OACLC,MAAOT,EACPU,SAlBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,yBAAKC,UAAU,0CACX,yBAAMC,IAAKJ,EAAIK,IAAKH,EAAKI,IAAKL,IAC9B,2BAAIA,K,uBCLFM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdP,EADc,gDACqCQ,UAAUF,GAD/C,+DAEDG,MAAMT,GAFL,cAEdU,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBjB,QATtB,kBAYba,GAZa,4CAAH,sDCGRK,EAAW,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EAEZtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkB1C,OAXIC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAC,GACfH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAK1B,CAACb,IAEGc,EDhB2BK,CAAanB,GAA/BU,EAD0B,EAC/BJ,KAAYO,EADmB,EACnBA,QAKnB,OACI,oCACI,wBAAIlB,UAAU,qCAAqCK,GACnD,yBAAKL,UAAU,aACdkB,GAAW,uBAAGlB,UAAU,qCAAb,cAEJe,EAAOF,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAab,IAAKa,EAAIjB,IAAQiB,UEKvCW,EAlBM,WAAO,IAAD,EACaC,IAAM3C,SAAU,CAAC,cAD9B,mBAChB4C,EADgB,KACJ7C,EADI,KAGvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACK6C,EAAWd,KAAI,SAAAe,GAAI,OACf,kBAAC,EAAD,CAAU3B,IAAK2B,EAAMvB,SAAUuB,UCVpDC,IAASC,OAAQ,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.038ff9a8.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = (props) => {\nconst {setCategorias} = props\n    const [inputValue, setInputValue] = useState(\"\")\n\n    const handleInputChange=(e)=>{\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit =(e)=>{ \n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n             setCategorias( cats => [inputValue,...cats])\n             setInputValue('')\n        }\n       \n    }\n    return (\n        <form onSubmit={handleSubmit}>\n           \n          <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                />\n        </form>\n    )\n}\n\nAddCategory.propTypes= {\n    setCategorias : PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img  key={id} src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","\nexport  const getGifs = async (category) => {\n    const url =     `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=N4yVJdpQ4mDAg4XY9ZGC0YfIL3rKZCPo`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n    return gifs\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem' \nimport { useFetchGift } from '../hooks/useFetchGifs'\n\nexport const GiftGrid = ({ category }) => {\n    const {data:images,loading} = useFetchGift(category);\n  \n\n    \n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            <div className=\"card-grid\">\n            {loading && <p className=\"animate__animated animate__fadeIn\" >Loading...</p>}\n                {\n                    images.map(img => (\n                        <GifGridItem key={img.id} {...img} />\n                    ))\n                }\n            </div>\n        </>\n\n\n\n\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGift = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category).then(imgs =>{\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n        }\n        )\n\n}, [category])\n\nreturn state;\n}","import React from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GiftGrid } from './components/GiftGrid'\n\nconst GifExpertApp = () => {\n    const [categorias, setCategorias] = React.useState( [\"One punch\"]) \n\n    return (\n        <>\n            <h2>GiftExpertApp </h2>\n            <AddCategory setCategorias={setCategorias}/>\n            <hr />\n           \n            <ol>\n                {categorias.map(item =>(\n                     <GiftGrid key={item} category={item}/>))}\n\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render( <GifExpertApp />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}